name: Node.js CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm test

      - name: Package Node.js App for Nexus
        run: |
          mkdir -p release
          tar -czvf release/node-app.tar.gz dist package.json package-lock.json

      - name: Upload Node.js Artifact to Nexus (`npm-repo`)
        run: |
          curl -u "admin:Gokul@866819" \
            --upload-file release/node-app.tar.gz \
            "http://15.206.70.92:8081/repository/npm-repo/node-app.tar.gz"

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: nodejs-build
          path: .

      - name: Log in to Docker Hub
        run: echo "Gokul@8668" | docker login -u "gokulmeyghanam" --password-stdin

      - name: Build Docker Image
        run: docker build -t gokulmeyghanam/nodejs-app:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push gokulmeyghanam/nodejs-app:latest

      - name: Tag Docker Image for Nexus (`docker-repo`)
        run: docker tag gokulmeyghanam/nodejs-app:latest 15.206.70.92:8082/docker-repo/nodejs-app:latest

      - name: Log in to Nexus Docker Repo
        run: echo "Gokul@866819" | docker login -u "admin" --password-stdin 15.206.70.92:8082

      - name: Push Docker Image to Nexus (`docker-repo`)
        run: docker push 15.206.70.92:8082/docker-repo/nodejs-app:latest
